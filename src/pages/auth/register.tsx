/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/PrBW4Arwi8l
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

import React, { useState, SyntheticEvent } from "react";
import apiClient from "../../lib/apiClient";
import userType from "../../constants/userType";
import { useRouter } from "../../../node_modules/next/router";

const Register = () => {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [password_confirmation, setPasswordConfirmation] = useState("");
  const [user_type, setUserType] = useState(userType.PLAYER);
  const router = useRouter();

  const handleSubmit = async (e: SyntheticEvent) => {
    e.preventDefault();
    try {
      const response = await apiClient.post("auth/register", {
        name,
        email,
        password,
        password_confirmation,
        user_type,
      });
      // レスポンスが正常に受信された場合の処理
      router.push("./login");
    } catch (error) {
      console.error("Error", error);
    }
  };

  return (
    <div className="flex h-full bg-[#f7f7f7] justify-center items-center">
      <div className="bg-white p-8 rounded-lg shadow-lg max-w-sm w-full m-4">
        <h1 className="text-2xl font-bold mb-6">新規登録</h1>
        <form className="space-y-4" onSubmit={handleSubmit}>
          <div>
            <label className="sr-only" htmlFor="email">
              ユーザー名
            </label>
            <input
              className="w-full px-3 py-2 border border-gray-200 rounded-md dark:border-gray-800"
              id="email"
              placeholder="ユーザー名"
              required
              type="text"
              name="name"
              value={name}
              onChange={(e) => setName(e.target.value)}
            />
          </div>
          <div>
            <label className="sr-only" htmlFor="email">
              メールアドレス
            </label>
            <input
              className="w-full px-3 py-2 border border-gray-200 rounded-md dark:border-gray-800"
              id="email"
              placeholder="メールアドレス"
              required
              type="email"
              name="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
            />
          </div>
          <div>
            <label className="sr-only" htmlFor="password">
              パスワード
            </label>
            <input
              className="w-full px-3 py-2 border border-gray-200 rounded-md dark:border-gray-800"
              id="password"
              placeholder="パスワード"
              required
              type="password"
              name="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
            />
          </div>
          <div>
            <label className="sr-only" htmlFor="confirmation_password">
              確認用パスワード
            </label>
            <input
              className="w-full px-3 py-2 border border-gray-200 rounded-md dark:border-gray-800"
              id="confirmation_password"
              placeholder="確認用パスワード"
              required
              type="password"
              name="password_confirmation"
              value={password_confirmation}
              onChange={(e) => setPasswordConfirmation(e.target.value)}
            />
          </div>
          <div className="flex items-center space-x-4">
            <div className="flex items-center">
              <input
                className="h-6 w-6 text-blue-600 focus:ring-blue-500"
                id="player"
                name="user_type"
                type="radio"
                value={userType.PLAYER}
                checked={user_type == userType.PLAYER}
                onChange={() => setUserType(userType.PLAYER)}
              />
              <label
                className="ml-2 block text-sm font-medium text-gray-700"
                htmlFor="player"
              >
                選手
              </label>
            </div>
            <div className="flex items-center">
              <input
                className="h-6 w-6 text-blue-600 focus:ring-blue-500"
                id="coach"
                name="user_type"
                type="radio"
                value={userType.COACH}
                checked={user_type == userType.COACH}
                onChange={() => setUserType(userType.COACH)}
              />
              <label
                className="ml-2 block text-sm font-medium text-gray-700"
                htmlFor="coach"
              >
                監督
              </label>
            </div>
          </div>
          <div>
            <button
              className="w-full px-3 py-2 bg-blue-600 text-white rounded-md"
              type="submit"
            >
              登録
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default Register;
